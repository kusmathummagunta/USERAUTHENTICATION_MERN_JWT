{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusma\\\\javascriptprojects\\\\userauth\\\\client\\\\src\\\\pages\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //creating the variables we need as state variables\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); //first point where our frontend connects with our backend\n\n  async function loginUser(event) {\n    //we do this because form have a default behaviour of refreshing/redirecting the page on submit\n    event.preventDefault(); //wait for response and this line will fail ro fetch if we dont have a method\n\n    const response = await fetch(\"http://localhost:4000/api/login\", {\n      method: \"POST\",\n      //We also have to tell the backend that we are sending this as content type application/json. This is necessary because there are\n      //buch of different ways of content-types. we can send as binary data or url encoded but the simplest is JSON\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // we are sending this to the back end\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }); // we convert the response data ino JSON\n\n    const data = await response.json();\n\n    if (data.user) {\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\n      localStorage.setItem(\"token\", data.token);\n      window.location.href = \"/dashboard\";\n    } else {\n      alert(\"Please check your username and password\");\n    } //console.log(data);\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loginUser,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"50ch\"\n        },\n        label: \"Email\",\n        variant: \"outlined\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"50ch\"\n        },\n        label: \"Password\",\n        variant: \"outlined\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          width: \"30ch\",\n          height: \"6ch\"\n        },\n        variant: \"outlined\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kusma/javascriptprojects/userauth/client/src/pages/login.js"],"names":["useState","Button","TextField","App","email","setEmail","password","setPassword","loginUser","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","user","localStorage","setItem","token","window","location","href","alert","width","e","target","value","height"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Button, TextField } from \"@mui/material\";\r\n\r\nfunction App() {\r\n  //creating the variables we need as state variables\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  //first point where our frontend connects with our backend\r\n  async function loginUser(event) {\r\n    //we do this because form have a default behaviour of refreshing/redirecting the page on submit\r\n    event.preventDefault();\r\n\r\n    //wait for response and this line will fail ro fetch if we dont have a method\r\n    const response = await fetch(\"http://localhost:4000/api/login\", {\r\n      method: \"POST\",\r\n      //We also have to tell the backend that we are sending this as content type application/json. This is necessary because there are\r\n      //buch of different ways of content-types. we can send as binary data or url encoded but the simplest is JSON\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      // we are sending this to the back end\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    });\r\n    // we convert the response data ino JSON\r\n    const data = await response.json();\r\n\r\n    if (data.user) {\r\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n      localStorage.setItem(\"token\", data.token);\r\n\r\n      window.location.href = \"/dashboard\";\r\n    } else {\r\n      alert(\"Please check your username and password\");\r\n    }\r\n\r\n    //console.log(data);\r\n  }\r\n  return (\r\n    <div align=\"center\">\r\n      <h1>Login</h1>\r\n      <form onSubmit={loginUser}>\r\n        <TextField\r\n          sx={{ width: \"50ch\" }}\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          type=\"email\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <TextField\r\n          sx={{ width: \"50ch\" }}\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <Button\r\n          sx={{ width: \"30ch\", height: \"6ch\" }}\r\n          variant=\"outlined\"\r\n          type=\"submit\"\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}