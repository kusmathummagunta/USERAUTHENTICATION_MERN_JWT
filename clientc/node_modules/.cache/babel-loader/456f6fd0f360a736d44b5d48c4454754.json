{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusma\\\\javascript projects\\\\userauth\\\\client\\\\src\\\\pages\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { makeStyles } from \"@mui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  button: {\n    width: \"30ch\",\n    height: \"7ch\",\n    border: 10,\n    borderRadius: 3,\n    margin: \"5ch\",\n    backgroundColor: \"white\",\n    display: \"inline-flex\",\n    alignSelf: \"center\"\n  }\n});\n\nfunction App() {\n  _s();\n\n  //creating the variables we need as state variables\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); //first point where our frontend connects with our backend\n\n  async function registerUser(event) {\n    //we do this because form have a default behaviour of refreshing/redirecting the page on submit\n    event.preventDefault(); //wait for response and this line will fail ro fetch if we dont have a method\n\n    const response = await fetch(\"http://localhost:4000/api/register\", {\n      method: \"POST\",\n      //We also have to tell the backend that we are sending this as content type application/json. This is necessary because there are\n      //buch of different ways of content-types. we can send as binary data or url encoded but the simplest is JSON\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // we are sending this to the back end\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }); // we convert the response data ino JSON\n\n    const data = await response.json();\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: registerUser,\n    sx: {\n      \"& .MuiTextField-root\": {\n        m: 1,\n        width: \"50ch\"\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        variant: \"outlined\",\n        value: name,\n        type: \"text\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        variant: \"outlined\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        variant: \"outlined\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        variant: \"outlined\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OmnhIGSAgZw0Xk0MlaO7kt68Rgc=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kusma/javascript projects/userauth/client/src/pages/register.js"],"names":["useState","Button","TextField","Box","makeStyles","useStyles","button","width","height","border","borderRadius","margin","backgroundColor","display","alignSelf","App","classes","name","setName","email","setEmail","password","setPassword","registerUser","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","m","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  button: {\n    width: \"30ch\",\n    height: \"7ch\",\n    border: 10,\n    borderRadius: 3,\n    margin: \"5ch\",\n    backgroundColor: \"white\",\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n  },\n});\nfunction App() {\n  //creating the variables we need as state variables\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //first point where our frontend connects with our backend\n  async function registerUser(event) {\n    //we do this because form have a default behaviour of refreshing/redirecting the page on submit\n    event.preventDefault();\n\n    //wait for response and this line will fail ro fetch if we dont have a method\n    const response = await fetch(\"http://localhost:4000/api/register\", {\n      method: \"POST\",\n      //We also have to tell the backend that we are sending this as content type application/json. This is necessary because there are\n      //buch of different ways of content-types. we can send as binary data or url encoded but the simplest is JSON\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      // we are sending this to the back end\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n      }),\n    });\n    // we convert the response data ino JSON\n    const data = await response.json();\n\n    console.log(data);\n  }\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={registerUser}\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"50ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <h1>Register</h1>\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          value={name}\n          type=\"text\"\n          onChange={(e) => setName(e.target.value)}\n        />\n        <br />\n        <TextField\n          label=\"Email\"\n          variant=\"outlined\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          type=\"email\"\n        />\n        <br />\n        <TextField\n          label=\"Password\"\n          variant=\"outlined\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n        />\n        <br />\n        <Button className={classes.button} variant=\"outlined\" type=\"submit\">\n          Register\n        </Button>\n      </div>\n    </Box>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}