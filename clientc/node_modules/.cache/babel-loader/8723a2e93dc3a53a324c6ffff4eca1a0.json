{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusma\\\\javascript projects\\\\userauth\\\\client\\\\src\\\\pages\\\\dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; //import jwt from \"jsonwebtoken\";\n//import jwt from \"jsonwebtoken\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  //we use usehistory hook from react router\n  const navigate = useNavigate(); // async function populateQuote() {\n  //   const req = await fetch(\"http://localhost:4000/api/Dashboard\", {\n  //     headers: {\n  //       \"x-access-token\": localStorage.getItem(\"token\"),\n  //     },\n  //   });\n  //   const data = req.json();\n  //   console.log(data);\n  // }\n  // //we need to verify if the user is logged in and so we use the useeffect hook\n  // useEffect(() => {\n  //   const token = localStorage.getItem(\"token\");\n  //   // we get the token from local storage\n  //   if (token) {\n  //     const user = jwt.decode(token);\n  //     //if user doesn't exist then it's kind of wrong\n  //     if (!user) {\n  //       localStorage.removeItem(\"token\");\n  //       navigate(\"/login\", { replace: true });\n  //     } else {\n  //       //if the user exists we need to send to the backend and populate the values\n  //       populateQuote();\n  //     }\n  //   }\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"\\\"hello world!!\\\"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Dashboard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/kusma/javascript projects/userauth/client/src/pages/dashboard.js"],"names":["React","useEffect","useNavigate","Dashboard","navigate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA,QAAMC,QAAQ,GAAGF,WAAW,EAA5B,CAFsB,CAItB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA/BD;;GAAMC,S;UAEaD,W;;;KAFbC,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\n//import jwt from \"jsonwebtoken\";\r\n//import jwt from \"jsonwebtoken\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  //we use usehistory hook from react router\r\n  const navigate = useNavigate();\r\n\r\n  // async function populateQuote() {\r\n  //   const req = await fetch(\"http://localhost:4000/api/Dashboard\", {\r\n  //     headers: {\r\n  //       \"x-access-token\": localStorage.getItem(\"token\"),\r\n  //     },\r\n  //   });\r\n  //   const data = req.json();\r\n  //   console.log(data);\r\n  // }\r\n  // //we need to verify if the user is logged in and so we use the useeffect hook\r\n  // useEffect(() => {\r\n  //   const token = localStorage.getItem(\"token\");\r\n  //   // we get the token from local storage\r\n  //   if (token) {\r\n  //     const user = jwt.decode(token);\r\n\r\n  //     //if user doesn't exist then it's kind of wrong\r\n  //     if (!user) {\r\n  //       localStorage.removeItem(\"token\");\r\n  //       navigate(\"/login\", { replace: true });\r\n  //     } else {\r\n  //       //if the user exists we need to send to the backend and populate the values\r\n  //       populateQuote();\r\n  //     }\r\n  //   }\r\n  // }, []);\r\n  return <h2>\"hello world!!\"</h2>;\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}