{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusma\\\\javascript projects\\\\userauth\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //creating the variables we need as state variables\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); //first point where our frontend connects with our backend\n\n  async function registerUser(event) {\n    //we do this because form have a default behaviour of refreshing/redirecting the page on submit\n    event.preventDefault(); //wait for response\n\n    const response = await fetch(\"http://localhost:4000/api/register\", {\n      //We also have to tell the backend that we are sending this as content type application/json. This is necessary because there are\n      //buch of different ways of content-types. we can send as binary data or url encoded but the simplest is JSON\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // we are sending this to the back end\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }); // we convert the response data ino JSON\n\n    const data = await response.json(); //test\n\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerUser,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        type: \"text\",\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U1DCtFSIKcmCKgpSr3L7jOg/618=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kusma/javascript projects/userauth/client/src/App.js"],"names":["useState","App","name","setName","email","setEmail","password","setPassword","registerUser","event","preventDefault","response","fetch","headers","body","JSON","stringify","data","json","console","log","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC,CAJa,CAMb;;AACA,iBAAeQ,YAAf,CAA4BC,KAA5B,EAAmC;AACjC;AACAA,IAAAA,KAAK,CAACC,cAAN,GAFiC,CAIjC;;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AACjE;AACA;AACAC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHwD;AAMjE;AACAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBd,QAAAA,IADmB;AAEnBE,QAAAA,KAFmB;AAGnBE,QAAAA;AAHmB,OAAf;AAP2D,KAAvC,CAA5B,CALiC,CAkBjC;;AACA,UAAMW,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB,CAnBiC,CAqBjC;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAET,YAAhB;AAAA,8BACE;AACE,QAAA,KAAK,EAAEN,IADT;AAEE,QAAA,QAAQ,EAAGmB,CAAD,IAAOlB,OAAO,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AACE,QAAA,KAAK,EAAEnB,KADT;AAEE,QAAA,QAAQ,EAAGiB,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cARF,eAcE;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AACE,QAAA,KAAK,EAAEjB,QADT;AAEE,QAAA,QAAQ,EAAGe,CAAD,IAAOd,WAAW,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAF9B;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cAfF,eAqBE;AAAA;AAAA;AAAA;AAAA,cArBF,eAsBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA5DQtB,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  //creating the variables we need as state variables\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //first point where our frontend connects with our backend\n  async function registerUser(event) {\n    //we do this because form have a default behaviour of refreshing/redirecting the page on submit\n    event.preventDefault();\n\n    //wait for response\n    const response = await fetch(\"http://localhost:4000/api/register\", {\n      //We also have to tell the backend that we are sending this as content type application/json. This is necessary because there are\n      //buch of different ways of content-types. we can send as binary data or url encoded but the simplest is JSON\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      // we are sending this to the back end\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n      }),\n    });\n    // we convert the response data ino JSON\n    const data = await response.json();\n\n    //test\n    console.log(data);\n  }\n  return (\n    <div>\n      <h1>Register</h1>\n      <form onSubmit={registerUser}>\n        <input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\"\n          placeholder=\"First Name\"\n        />\n        <br />\n        <input\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          type=\"email\"\n          placeholder=\"Email\"\n        />\n        <br />\n        <input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <br />\n        <input type=\"submit\" value=\"Register\" />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}