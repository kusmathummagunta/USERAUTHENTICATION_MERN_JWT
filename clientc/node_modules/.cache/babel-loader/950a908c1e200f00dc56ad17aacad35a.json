{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusma\\\\javascript projects\\\\userauth\\\\client\\\\src\\\\pages\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport { unstable_HistoryRouter } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //creating the variables we need as state variables\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = unstable_HistoryRouter(); //first point where our frontend connects with our backend\n\n  async function registerUser(event) {\n    //we do this because form have a default behaviour of refreshing/redirecting the page on submit\n    event.preventDefault(); //wait for response and this line will fail ro fetch if we dont have a method\n\n    const response = await fetch(\"http://localhost:4000/api/register\", {\n      method: \"POST\",\n      //We also have to tell the backend that we are sending this as content type application/json. This is necessary because there are\n      //buch of different ways of content-types. we can send as binary data or url encoded but the simplest is JSON\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // we are sending this to the back end\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }); // we convert the response data ino JSON\n\n    const data = await response.json();\n\n    if (data.status === \"ok\") {\n      history.push(\"/login\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerUser,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"50ch\"\n        },\n        label: \"Name\",\n        variant: \"outlined\",\n        value: name,\n        type: \"text\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"50ch\"\n        },\n        label: \"Email\",\n        variant: \"outlined\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"50ch\"\n        },\n        label: \"Password\",\n        variant: \"outlined\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          width: \"30ch\",\n          height: \"6ch\"\n        },\n        variant: \"outlined\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U1DCtFSIKcmCKgpSr3L7jOg/618=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kusma/javascript projects/userauth/client/src/pages/register.js"],"names":["useState","Button","TextField","unstable_HistoryRouter","jwt","App","name","setName","email","setEmail","password","setPassword","history","registerUser","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","status","push","width","e","target","value","height"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport { unstable_HistoryRouter } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nfunction App() {\n  //creating the variables we need as state variables\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const history = unstable_HistoryRouter();\n\n  //first point where our frontend connects with our backend\n  async function registerUser(event) {\n    //we do this because form have a default behaviour of refreshing/redirecting the page on submit\n    event.preventDefault();\n\n    //wait for response and this line will fail ro fetch if we dont have a method\n    const response = await fetch(\"http://localhost:4000/api/register\", {\n      method: \"POST\",\n      //We also have to tell the backend that we are sending this as content type application/json. This is necessary because there are\n      //buch of different ways of content-types. we can send as binary data or url encoded but the simplest is JSON\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      // we are sending this to the back end\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n      }),\n    });\n    // we convert the response data ino JSON\n    const data = await response.json();\n\n    if (data.status === \"ok\") {\n      history.push(\"/login\");\n    }\n  }\n  return (\n    <div align=\"center\">\n      <h1>Register</h1>\n      <form onSubmit={registerUser}>\n        <TextField\n          sx={{ width: \"50ch\" }}\n          label=\"Name\"\n          variant=\"outlined\"\n          value={name}\n          type=\"text\"\n          onChange={(e) => setName(e.target.value)}\n        />\n        <br />\n        <br />\n        <TextField\n          sx={{ width: \"50ch\" }}\n          label=\"Email\"\n          variant=\"outlined\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          type=\"email\"\n        />\n        <br />\n        <br />\n        <TextField\n          sx={{ width: \"50ch\" }}\n          label=\"Password\"\n          variant=\"outlined\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n        />\n        <br />\n        <br />\n        <Button\n          sx={{ width: \"30ch\", height: \"6ch\" }}\n          variant=\"outlined\"\n          type=\"submit\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}